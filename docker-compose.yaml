services:
  api:
    build:
      context: .
    ports:
      - "8000:8000"
    command: ["uv", "run", "uvicorn", "src.api.app:app", "--reload", "--reload-exclude", "*data*", "--host", "0.0.0.0"]
    environment:
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
      - LANGFUSE_HOST=http://langfuse-server:3000
      - LANGFUSE_PUBLIC_KEY=lf_pk_1234567890
      - LANGFUSE_SECRET_KEY=lf_sk_1234567890
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - WATCHFILES_FORCE_POLLING=1
      - DATABASE_URL=postgresql+psycopg://postgres:postgres@db:5432/zeno-data
      - EMAILS_ALLOWLIST="developmentseed.org,wri.org"
      - COOKIE_SIGNER_SECRET_KEY=${COOKIE_SIGNER_SECRET_KEY:-secret-cookie-key-123}
    env_file:
      - .env
    volumes:
      - ./src:/app/src
      - ./data:/app/data
    depends_on:
      migrate: 
        condition: service_completed_successfully
        
  frontend: 
    build: 
      context: .
    command: ["uv", "run", "streamlit", "run", "src/frontend/app.py", "--server.port=8501", "--server.runOnSave=True"]
    ports: 
      - 8501:8501
    volumes:
      - ./src:/app/src
      - ./client.py:/app/src/frontend/client.py
      - ./.env:/app/.env
    environment:
      - API_BASE_URL=https://api.zeno-staging.ds.io
      - LOCAL_API_BASE_URL=http://api:8000
      - STREAMLIT_URL=${STREAMLIT_URL:-http://localhost:8501}

  langfuse-server:
    image: langfuse/langfuse:3
    depends_on:
      migrate:
        condition: service_completed_successfully
    ports:
      - "3000:3000"
    healthcheck:
      # Uses wget because curl is not available in the langfuse image
      test: ["CMD", "wget", "-qO-", "http://172.20.0.3:3000/api/public/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

    environment:
      - DATABASE_PORT=${DATABASE_PORT:-5432}
      - DATABASE_USERNAME=${DATABASE_USERNAME:-postgres}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD:-postgres}
      - DATABASE_NAME=${DATABASE_NAME:-langfuse}
      - DATABASE_HOST=${DATABASE_HOST:-db}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-secret}
      - SALT=${SALT:-salt}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - TELEMETRY_ENABLED=${TELEMETRY_ENABLED:-false}
      - LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES=${LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES:-false}
      - LANGFUSE_INIT_ORG_ID=${LANGFUSE_INIT_ORG_NAME:-devseed}
      - LANGFUSE_INIT_PROJECT_ID=${LANGFUSE_INIT_PROJECT_ID:-wri_lcl}
      - LANGFUSE_INIT_PROJECT_NAME=${LANGFUSE_INIT_PROJECT_NAME:-WRI Land Carbon Labs}
      - LANGFUSE_INIT_PROJECT_PUBLIC_KEY=${LANGFUSE_INIT_PROJECT_PUBLIC_KEY:-lf_pk_1234567890}
      - LANGFUSE_INIT_PROJECT_SECRET_KEY=${LANGFUSE_INIT_PROJECT_SECRET_KEY:-lf_sk_1234567890}
      - LANGFUSE_INIT_USER_EMAIL=${LANGFUSE_INIT_USER_EMAIL:-leo@developmentseed.org}
      - LANGFUSE_INIT_USER_NAME=${LANGFUSE_INIT_USER_NAME:-Leo}
      - LANGFUSE_INIT_USER_PASSWORD=${LANGFUSE_INIT_USER_PASSWORD:-Password123!}

  db:
    image: postgis/postgis:17-3.5
    platform: linux/x86_64
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_DB=zeno-data
      
    ports:
      - 5432:5432
    volumes:
      - ./database_data:/var/lib/postgresql/data

  migrate:
    build:
      context: ./db
    depends_on:
      db:
        condition: service_healthy
    
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - APP_DB=zeno-data
    volumes: 
      - ./db:/app/db

  
