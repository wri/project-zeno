[project]
name = "project-zeno"
version = "0.1.0"
description = "Language Interface for Maps & WRI/LCL data APIs."
readme = "README.md"
requires-python = "==3.12.8"
dependencies = [
    "langchain==0.3.26",
    "langchain-community==0.3.27",
    "langchain-core==0.3.74",
    "langchain-openai==0.3.28",
    "langfuse==3.3.4",
    "langchain-chroma==0.2.5",
    "langchain-google-genai==2.1.9",
    "fastapi[standard]==0.116.1",
    "watchdog==6.0.0",
    "uvicorn[standard]==0.35.0",
    "geojson-pydantic==2.0.0",
    "fiona==1.10.1",
    "geopandas==1.0.1",
    "langgraph==0.5.4",
    "pystac==1.13.0",
    "pystac-client==0.9.0",
    "cachetools==5.5.2",
    "pydantic==2.11.7",
    "pydantic-settings==2.10.1",
    "alembic==1.16.4",
    "sqlalchemy==2.0.41",
    "pypgstac==0.9.7",
    "psycopg==3.2.9",
    "rio-stac==0.11.0",
    "psycopg-pool==3.2.6",
    "langgraph-checkpoint-postgres==2.0.23",
    "langchain-anthropic==0.3.17",
    "s3fs==2025.3.0",
    "pandas==2.2.3",
    "tabulate==0.9.0",
    "setuptools==80.9.0",
    "itsdangerous==2.2.0",
    "structlog==25.4.0",
    "httpx==0.28.1",
    "geoalchemy2==0.18.0",
    "boto3==1.38.27",
    "requests==2.32.4",
    "asyncpg==0.30.0",
    "greenlet==3.2.3",
    "simsimd==6.5.0",
    "psycopg2==2.9.10",
    "bcrypt==4.2.1",
    "click==8.1.8",
    "llm-sandbox[docker]>=0.3.24",
    "langchain-ollama>=0.3.7",
]

[dependency-groups]
dev = [
    "jupyterlab==4.4.5",
    "pre-commit==4.2.0",
    "ruff==0.12.4",
    "pytest==8.4.1",
    "matplotlib==3.10.3",
    "geopandas==1.0.1",
    "lancedb==0.24.1",
    "pytest-asyncio==1.1.0",
    "locust==2.32.5",
]
frontend = [
    "streamlit==1.47.0",
    "streamlit_folium==0.25.0",
    "pandas==2.2.3",
    "plotly==6.3.0",
    "python-dotenv==1.0.1",
    "geopandas==1.0.1",
    "folium-vectorgrid==0.1.3",
]

[tool.ruff]
# Set the maximum line length to 79.
line-length = 79

[tool.ruff.lint]
select = ["E", "F", "W", "Q", "I"]
ignore = ["E501"]

[tool.ruff.format]
quote-style = "double"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.uv]
default-groups = ["dev", "frontend"]

[tool.pytest.ini_options]
markers = [
    "serial: mark test to run serially (not in parallel)",
    "sandbox: mark test as requiring Docker sandbox (integration test)",
]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "module"
